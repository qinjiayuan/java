<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sql.ClientReviewDetailMapper">
  <resultMap id="ClientReviewDetail" type="model.ClientReviewDetail">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="RECORD_ID" jdbcType="VARCHAR" property="recordId" />
    <result column="CLIENT_NAME" jdbcType="VARCHAR" property="clientName" />
    <result column="CLIENT_POSITION" jdbcType="VARCHAR" property="clientPosition" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="SUITABILITY" jdbcType="CHAR" property="suitability" />
    <result column="CREATED_DATETIME" jdbcType="TIMESTAMP" property="createdDatetime" />
    <result column="REVIEW_LOG" jdbcType="CLOB" property="reviewLog" />
    <result column="SUITABILITY_LOG" jdbcType="CLOB" property="suitabilityLog" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, RECORD_ID, CLIENT_NAME, CLIENT_POSITION, EMAIL, PHONE, SUITABILITY, CREATED_DATETIME
  </sql>
  <sql id="Blob_Column_List">
    REVIEW_LOG, SUITABILITY_LOG
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="model.ClientReviewDetailExample" resultMap="ClientReviewDetail">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from CLIENT_REVIEW_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="model.ClientReviewDetailExample" resultMap="ClientReviewDetail">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from CLIENT_REVIEW_DETAIL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ClientReviewDetail">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from CLIENT_REVIEW_DETAIL
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from CLIENT_REVIEW_DETAIL
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="model.ClientReviewDetailWithBLOBs">
    insert into CLIENT_REVIEW_DETAIL (ID, RECORD_ID, CLIENT_NAME, 
      CLIENT_POSITION, EMAIL, PHONE, 
      SUITABILITY, CREATED_DATETIME, REVIEW_LOG, 
      SUITABILITY_LOG)
    values (#{id,jdbcType=VARCHAR}, #{recordId,jdbcType=VARCHAR}, #{clientName,jdbcType=VARCHAR}, 
      #{clientPosition,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{suitability,jdbcType=CHAR}, #{createdDatetime,jdbcType=TIMESTAMP}, #{reviewLog,jdbcType=CLOB}, 
      #{suitabilityLog,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="model.ClientReviewDetailWithBLOBs">
    insert into CLIENT_REVIEW_DETAIL
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="recordId != null">
        RECORD_ID,
      </if>
      <if test="clientName != null">
        CLIENT_NAME,
      </if>
      <if test="clientPosition != null">
        CLIENT_POSITION,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="suitability != null">
        SUITABILITY,
      </if>
      <if test="createdDatetime != null">
        CREATED_DATETIME,
      </if>
      <if test="reviewLog != null">
        REVIEW_LOG,
      </if>
      <if test="suitabilityLog != null">
        SUITABILITY_LOG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="recordId != null">
        #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="clientName != null">
        #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="clientPosition != null">
        #{clientPosition,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="suitability != null">
        #{suitability,jdbcType=CHAR},
      </if>
      <if test="createdDatetime != null">
        #{createdDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="reviewLog != null">
        #{reviewLog,jdbcType=CLOB},
      </if>
      <if test="suitabilityLog != null">
        #{suitabilityLog,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.ClientReviewDetailWithBLOBs">
    update CLIENT_REVIEW_DETAIL
    <set>
      <if test="recordId != null">
        RECORD_ID = #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="clientName != null">
        CLIENT_NAME = #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="clientPosition != null">
        CLIENT_POSITION = #{clientPosition,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="suitability != null">
        SUITABILITY = #{suitability,jdbcType=CHAR},
      </if>
      <if test="createdDatetime != null">
        CREATED_DATETIME = #{createdDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="reviewLog != null">
        REVIEW_LOG = #{reviewLog,jdbcType=CLOB},
      </if>
      <if test="suitabilityLog != null">
        SUITABILITY_LOG = #{suitabilityLog,jdbcType=CLOB},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="model.ClientReviewDetailWithBLOBs">
    update CLIENT_REVIEW_DETAIL
    set RECORD_ID = #{recordId,jdbcType=VARCHAR},
      CLIENT_NAME = #{clientName,jdbcType=VARCHAR},
      CLIENT_POSITION = #{clientPosition,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      SUITABILITY = #{suitability,jdbcType=CHAR},
      CREATED_DATETIME = #{createdDatetime,jdbcType=TIMESTAMP},
      REVIEW_LOG = #{reviewLog,jdbcType=CLOB},
      SUITABILITY_LOG = #{suitabilityLog,jdbcType=CLOB}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.ClientReviewDetail">
    update CLIENT_REVIEW_DETAIL
    set RECORD_ID = #{recordId,jdbcType=VARCHAR},
      CLIENT_NAME = #{clientName,jdbcType=VARCHAR},
      CLIENT_POSITION = #{clientPosition,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      SUITABILITY = #{suitability,jdbcType=CHAR},
      CREATED_DATETIME = #{createdDatetime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

</mapper>